package final_exam;

import java.awt.*;

import javax.swing.*;
import javax.swing.border.LineBorder;

public class Map extends JFrame {
	JPanel lab;
	JPanel lab1;
	Map() {
		setTitle("8*8 Color Frame");
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		Container c = getContentPane();
		lab1 = new JPanel();
		
		lab1.setLayout(new GridLayout(8, 8));
		for (int i = 0; i < 64; i++) {
			lab = new JPanel();
			lab.setBackground(Color.white);
			lab.setBorder(new LineBorder(Color.black));

			lab.setOpaque(true);
			lab1.add(lab);
		}
		lab1.setBorder(BorderFactory.createEmptyBorder(10 , 10 , 10 , 10));
		c.add(lab1,BorderLayout.CENTER);
		
		setSize(700, 700);
	}
	
	public void createMap()
	{
	   Room[] map1 = new Room[8];
	   for (int i = 0; i < 8; i++)
	      map1[i] = new Room[9];

	   map1[0][0].Room(0, 0, 0, 0);
	   map1[0][1].Room(1, 0, 0, 1);
	   map1[0][2].room2(0, 1, 0, 1);
	   map1[0][3].room2(1, 1, 0, 1);
	   map1[0][4].room2(1, 1, 0, 1);
	   map1[0][5].room2(1, 1, 0, 1);
	   map1[0][6].room2(1, 1, 0, 0);
	   map1[0][7].room2(1, 1, 0, 1);
	   map1[0][8].room2(1, 0, 0, 0);

	   map1[1][0].room2(0, 0, 0, 0);
	   map1[1][1].room2(0, 1, 1, 1);
	   map1[1][2].room2(1, 1, 1, 1);
	   map1[1][3].room2(1, 1, 1, 1);
	   map1[1][4].room2(1, 1, 1, 1);
	   map1[1][5].room2(1, 1, 1, 1);
	   map1[1][6].room2(1, 1, 0, 1);
	   map1[1][7].room2(1, 0, 1, 1);
	   map1[1][8].room2(0, 0, 0, 1);

	   map1[2][0].room2(0, 0, 0, 0);
	   map1[2][1].room2(0, 1, 1, 1);
	   map1[2][2].room2(1, 1, 1, 1);
	   map1[2][3].room2(1, 1, 1, 1);
	   map1[2][4].room2(1, 1, 1, 1);
	   map1[2][5].room2(1, 0, 1, 1);
	   map1[2][6].room2(0, 1, 1, 1);
	   map1[2][7].room2(1, 1, 1, 1);
	   map1[2][8].room2(1, 0, 1, 1);

	   map1[3][0].room2(0, 0, 0, 0);
	   map1[3][1].room2(0, 1, 1, 1);
	   map1[3][2].room2(1, 1, 1, 0);
	   map1[3][3].room2(1, 1, 1, 1);
	   map1[3][4].room2(1, 0, 1, 1);
	   map1[3][5].room2(0, 1, 1, 1);
	   map1[3][6].room2(1, 1, 1, 0);
	   map1[3][7].room2(1, 1, 1, 1);
	   map1[3][8].room2(1, 0, 1, 1);

	   map1[4][0].room2(0, 0, 0, 0);
	   map1[4][1].room2(0, 1, 1, 1);
	   map1[4][2].room2(1, 1, 0, 1);
	   map1[4][3].room2(1, 0, 1, 1);
	   map1[4][4].room2(0, 1, 1, 1);
	   map1[4][5].room2(1, 1, 1, 1);
	   map1[4][6].room2(1, 1, 0, 1);
	   map1[4][7].room2(1, 1, 1, 1);
	   map1[4][8].room2(1, 0, 1, 1);

	   map1[5][0].room2(0, 0, 0, 0);
	   map1[5][1].room2(0, 0, 1, 0);
	   map1[5][2].room2(0, 0, 1, 1);
	   map1[5][3].room2(0, 1, 1, 1);
	   map1[5][4].room2(1, 1, 1, 1);
	   map1[5][5].room2(1, 1, 1, 1);
	   map1[5][6].room2(1, 0, 1, 1);
	   map1[5][7].room2(0, 1, 1, 0);
	   map1[5][8].room2(1, 0, 1, 1);

	   map1[6][0].room2(0, 0, 1, 1);
	   map1[6][1].room2(0, 1, 0, 0);
	   map1[6][2].room2(1, 0, 1, 1);
	   map1[6][3].room2(0, 1, 1, 1);
	   map1[6][4].room2(1, 0, 1, 1);
	   map1[6][5].room2(0, 1, 1, 0);
	   map1[6][6].room2(1, 1, 1, 1);
	   map1[6][7].room2(1, 1, 0, 1);
	   map1[6][8].room2(1, 0, 1, 1);

	   map1[7][0].room2(0, 0, 0, 0);
	   map1[7][1].room2(0, 1, 0, 0);
	   map1[7][2].room2(1, 1, 1, 0);
	   map1[7][3].room2(1, 1, 1, 0);
	   map1[7][4].room2(1, 1, 1, 0);
	   map1[7][5].room2(1, 0, 0, 0);
	   map1[7][6].room2(0, 1, 1, 0);
	   map1[7][7].room2(1, 1, 1, 0);
	   map1[7][8].room2(1, 0, 1, 0);
	}

	public static void main(String[] args) {
		new Map();
		System.out.println("test");
	}
}

